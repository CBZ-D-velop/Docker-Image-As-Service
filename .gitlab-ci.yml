# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- gitlab-test
- lint
- sonarqube-check
- build
- scout-analyse
- publish

variables:
  ANSIBLE_FORCE_COLOR: "true"
  PY_COLORS: "1"
  #
  DOCKER_IMAGE__ANALYSE_SONAR: "labocbz/analyse-sonar-scanner:latest"
  DOCKER_IMAGE__ANALYSE_DOCKER_IMAGE: "labocbz/analyse-docker-image:latest"
  DOCKER_IMAGE__BUILD_DOCKERFILE: "labocbz/build-dockerfile:latest"
  DOCKER_IMAGE__LINT_DOCKERFILE: "labocbz/lint-dockerfile:latest"
  DOCKER_IMAGE__LINT_SECRETS: "labocbz/lint-secrets:latest"
  DOCKER_IMAGE__LINT_MARKDOWN: "labocbz/lint-markdown:latest"

###############################################################################
#################### EXTENDABLES
###############################################################################

.build: &build
  stage: build
  image: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE_DOCKER_DOCKERFILE_BUILD
  script:
    - "cd $(pwd)/${TYPE}/${NAME}/latest && bash build --test"
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'

.scout-analyse: &scout-analyse
  stage: scout
  image: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE_DOCKER_SCOUT
  before_script:
    - "docker login -u \"${DOCKER_HUB_REPOS_USERNAME}\" -p \"${DOCKER_HUB_REPOS_PASSWORD}\""
    - "cd $(pwd)/${TYPE}/${NAME}/latest"
    - "bash build --scout"
    - "cd ../../../ && pwd"
  script:
    - "docker scout cves --exit-code --only-severity critical,high --format markdown --output ./cves-report.md local://local/${NAME}:latest-scout || true"
    - "docker scout recommendations local://local/${NAME}:latest-scout || true"
  allow_failure: true
  artifacts:
    expire_in: "1 month"
    paths:
      - "cves-report.md"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'

.publish: &publish
  stage: publish
  image: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE_DOCKER_DOCKERFILE_BUILD
  before_script:
    - "docker login -u \"${DOCKER_HUB_REPOS_USERNAME}\" -p \"${DOCKER_HUB_REPOS_PASSWORD}\""
  script:
    - "cd $(pwd)/${TYPE}/${NAME}/latest && bash build --cicd"
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

###############################################################################
#################### CI JOBS
###############################################################################

############################################
#### gitlab-test
############################################

# As a GitLab ci, we use the default template :)
sast:
  stage: gitlab-test
include:
- template: Security/SAST.gitlab-ci.yml
  allow_failure: false

############################################
#### lint
############################################

dockerfile-lint:
  stage: lint
  image: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE__LINT_DOCKERFILE
  script:
    - "hadolint --ignore DL3018 --ignore DL3013 --ignore DL3008 --ignore DL3009 --ignore DL3015 $(pwd)/*/*/latest/Dockerfile"
  allow_failure: false

markdown-lint:
  stage: lint
  image: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE__LINT_MARKDOWN
  script:
    - markdownlint './README.md' --disable MD013
    - markdownlint './*/*/latest/README.md' --disable MD013
  allow_failure: false

secret-lint:
  stage: lint
  image: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE__LINT_SECRETS
  script:
    - "detect-secrets scan"
    - "detect-secrets audit .secrets.baseline"
  allow_failure: false

############################################
#### sonarqube
############################################

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: $NEXUS_DOCKER_GROUP_REGISTRY/$DOCKER_IMAGE__ANALYSE_SONAR
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - ".sonar/cache"
  script: 
    - "sonar-scanner -X"

############################################
#### test
############################################

build_debian_11_ansible:
  <<: *build
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"

build_debian_12_ansible:
  <<: *build
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"

build_docker_dind_ansible:
  <<: *build
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"

build_docker_dind_molecule:
  <<: *build
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"

build_ubuntu_22_ansible:
  <<: *build
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"

build_debian_11_certification:
  <<: *build
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"

build_debian_npmbuild:
  <<: *build
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"

build_docker_dockerfilebuild:
  <<: *build
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"

build_alpine_ansiblelint:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"

build_alpine_dockerfilelint:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"

build_alpine_jinjalint:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"

build_alpine_secretlint:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"

build_alpine_sonarcli:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"

build_alpine_yamllint:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"

build_alpine_markdownlint:
  <<: *build
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"

build_alpine_git:
  <<: *build
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"

build_alpine_releasecli:
  <<: *build
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"

build_alpine_nginx:
  <<: *build
  variables:
    TYPE: "Hosting"
    NAME: "alpine-nginx"

############################################
#### scout
############################################

scout-analyse_debian_11_ansible:
  <<: *scout-analyse
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"
  needs:
    - "build_debian_11_ansible"

scout-analyse_debian_12_ansible:
  <<: *scout-analyse
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"
  needs:
    - "build_debian_12_ansible"

scout-analyse_docker_dind_ansible:
  <<: *scout-analyse
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"
  needs:
    - "build_docker_dind_ansible"

scout-analyse_docker_dind_molecule:
  <<: *scout-analyse
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"
  needs:
    - "build_docker_dind_molecule"

scout-analyse_ubuntu_22_ansible:
  <<: *scout-analyse
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"
  needs:
    - "build_ubuntu_22_ansible"

scout-analyse_debian_11_certification:
  <<: *scout-analyse
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"
  needs:
    - "build_debian_11_certification"

scout-analyse_debian_npmbuild:
  <<: *scout-analyse
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"
  needs:
    - "build_debian_npmbuild"

scout-analyse_docker_dockerfilebuild:
  <<: *scout-analyse
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"
  needs:
    - "build_docker_dockerfilebuild"

scout-analyse_alpine_ansiblelint:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"
  needs:
    - "build_alpine_ansiblelint"

scout-analyse_alpine_dockerfilelint:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"
  needs:
    - "build_alpine_dockerfilelint"

scout-analyse_alpine_jinjalint:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"
  needs:
    - "build_alpine_jinjalint"

scout-analyse_alpine_secretlint:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"
  needs:
    - "build_alpine_secretlint"

scout-analyse_alpine_sonarcli:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"
  needs:
    - "build_alpine_sonarcli"

scout-analyse_alpine_yamllint:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"
  needs:
    - "build_alpine_yamllint"

scout-analyse_alpine_markdownlint:
  <<: *scout-analyse
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"
  needs:
    - "build_alpine_markdownlint"

scout-analyse_alpine_git:
  <<: *scout-analyse
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"
  needs:
    - "build_alpine_git"

scout-analyse_alpine_releasecli:
  <<: *scout-analyse
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"
  needs:
    - "build_alpine_releasecli"

scout-analyse_alpine_nginx:
  <<: *scout-analyse
  variables:
    TYPE: "Hosting"
    NAME: "alpine-nginx"
  needs:
    - "build_alpine_nginx"

############################################
#### publish
############################################

publish_debian_11_ansible:
  <<: *publish
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"
  needs:
    - "scout-analyse_debian_11_ansible"

publish_debian_12_ansible:
  <<: *publish
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"
  needs:
    - "scout-analyse_debian_12_ansible"

publish_docker_dind_ansible:
  <<: *publish
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"
  needs:
    - "scout-analyse_docker_dind_ansible"

publish_docker_dind_molecule:
  <<: *publish
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"
  needs:
    - "scout-analyse_docker_dind_molecule"

publish_ubuntu_22_ansible:
  <<: *publish
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"
  needs:
    - "scout-analyse_ubuntu_22_ansible"

publish_debian_11_certification:
  <<: *publish
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"
  needs:
    - "scout-analyse_debian_11_certification"

publish_debian_npmbuild:
  <<: *publish
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"
  needs:
    - "scout-analyse_debian_npmbuild"

publish_docker_dockerfilebuild:
  <<: *publish
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"
  needs:
    - "scout-analyse_docker_dockerfilebuild"

publish_alpine_ansiblelint:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"
  needs:
    - "scout-analyse_alpine_ansiblelint"

publish_alpine_dockerfilelint:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"
  needs:
    - "scout-analyse_alpine_dockerfilelint"

publish_alpine_jinjalint:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"
  needs:
    - "scout-analyse_alpine_jinjalint"

publish_alpine_secretlint:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"
  needs:
    - "scout-analyse_alpine_secretlint"

publish_alpine_sonarcli:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"
  needs:
    - "scout-analyse_alpine_sonarcli"

publish_alpine_yamllint:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"
  needs:
    - "scout-analyse_alpine_yamllint"

publish_alpine_markdownlint:
  <<: *publish
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"
  needs:
    - "scout-analyse_alpine_markdownlint"

publish_alpine_git:
  <<: *publish
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"
  needs:
    - "scout-analyse_alpine_git"

publish_alpine_releasecli:
  <<: *publish
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"
  needs:
    - "scout-analyse_alpine_releasecli"

publish_alpine_nginx:
  <<: *publish
  variables:
    TYPE: "Hosting"
    NAME: "alpine-nginx"
  needs:
    - "scout-analyse_alpine_nginx"
