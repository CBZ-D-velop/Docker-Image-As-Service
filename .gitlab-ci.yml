# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- gitlab-test
- tmp
- lint
- secret
- sonarqube
- testbuild
- security
- publish

variables:
  ANSIBLE_FORCE_COLOR: "true"
  PY_COLORS: "1"
  #
  DOCKER_IMAGE_ALPINE_SONAR_SCANNER_CLI: "robincbz/alpine-sonarcli:latest"
  DOCKER_IMAGE_ALPINE_GIT: robincbz/alpine-git:latest
  DOCKER_IMAGE_ALPINE_RELEASE_CLI: "robincbz/alpine-releasecli:latest"
  DOCKER_IMAGE_ALPINE_DOCKERFILE_LINT: "robincbz/alpine-dockerfilelint:latest"
  DOCKER_IMAGE_DOCKER_DOCKERFILE_BUILD: "robincbz/docker-dockerfilebuild:latest"
  DOCKER_IMAGE_DOCKER_SECRET_LINT: "robincbz/alpine-secretlint:latest"
  DOCKER_IMAGE_DOCKER_SCOUT: "robincbz/docker-scout:latest"

###############################################################################
#################### EXTENDABLES
###############################################################################

# To start, we need to lint Dockerfile with hadolint
.hadolint: &hadolint
  stage: lint
  image: $NEXUS_REPOS_DOCKER_REGISTRY/$DOCKER_IMAGE_ALPINE_DOCKERFILE_LINT
  script:
    - "hadolint --ignore DL3018 --ignore DL3013 --ignore DL3008 --ignore DL3009 --ignore DL3015 $(pwd)/$TYPE/$NAME/latest/Dockerfile"
  allow_failure: false

.secretlint: &secretlint
  stage: secret
  image: $NEXUS_REPOS_DOCKER_REGISTRY/$DOCKER_IMAGE_DOCKER_SECRET_LINT
  script:
    - "detect-secrets -C $(pwd)/$TYPE/$NAME/latest scan > .secrets.baseline"
    - "detect-secrets scan"
    - "detect-secrets audit .secrets.baseline"
  allow_failure: false

.testbuild: &testbuild
  stage: testbuild
  image: $NEXUS_REPOS_DOCKER_REGISTRY/$DOCKER_IMAGE_DOCKER_DOCKERFILE_BUILD
  script:
    - "cd $(pwd)/${TYPE}/${NAME}/latest && bash build --testbuild"
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "main"'

.security: &security
  stage: tmp
  image: $NEXUS_REPOS_DOCKER_REGISTRY/$DOCKER_IMAGE_DOCKER_SCOUT
  before_script:
    - "docker login -u \"${NEXUS_REPOS_USERNAME}\" -p \"${NEXUS_REPOS_PASSWORD}\" \"${NEXUS_REPOS_DOCKER_REGISTRY}\""
    - "cd $(pwd)/${TYPE}/${NAME}/latest && bash build --dockerscout"
  script:
    - "docker scout cves ${NEXUS_REPOS_DOCKER_REGISTRY}/localdockerscout/${NAME}:latest"
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH == "main"'

###############################################################################
#################### CI JOBS
###############################################################################

############################################
#### gitlab-test
############################################

# As a GitLab ci, we use the default template :)
sast:
  stage: gitlab-test
include:
- template: Security/SAST.gitlab-ci.yml
  allow_failure: false

############################################
#### lint
############################################

hadolint_debian_11_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"

hadolint_debian_12_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"

hadolint_docker_dind_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"

hadolint_docker_dind_molecule:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"

hadolint_ubuntu_22_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"

hadolint_debian_11_certification:
  <<: *hadolint
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"

hadolint_debian_npmbuild:
  <<: *hadolint
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"

hadolint_docker_dockerfilebuild:
  <<: *hadolint
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"

hadolint_alpine_ansiblelint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"

hadolint_alpine_dockerfilelint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"

hadolint_alpine_jinjalint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"

hadolint_alpine_secretlint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"

hadolint_alpine_sonarcli:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"

hadolint_alpine_yamllint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"

hadolint_alpine_markdownlint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"

hadolint_alpine_git:
  <<: *hadolint
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"

hadolint_alpine_releasecli:
  <<: *hadolint
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"

############################################
#### security
############################################

secretlint_debian_11_ansible:
  <<: *secretlint
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"
  needs:
    - "hadolint_debian_11_ansible"

secretlint_debian_12_ansible:
  <<: *secretlint
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"
  needs:
    - "hadolint_debian_12_ansible"

secretlint_docker_dind_ansible:
  <<: *secretlint
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"
  needs:
    - "hadolint_docker_dind_ansible"

secretlint_docker_dind_molecule:
  <<: *secretlint
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"
  needs:
    - "hadolint_docker_dind_molecule"

secretlint_ubuntu_22_ansible:
  <<: *secretlint
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"
  needs:
    - "hadolint_ubuntu_22_ansible"

secretlint_debian_11_certification:
  <<: *secretlint
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"
  needs:
    - "hadolint_debian_11_certification"

secretlint_debian_npmbuild:
  <<: *secretlint
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"
  needs:
    - "hadolint_debian_npmbuild"

secretlint_docker_dockerfilebuild:
  <<: *secretlint
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"
  needs:
    - "hadolint_docker_dockerfilebuild"

secretlint_alpine_ansiblelint:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"
  needs:
    - "hadolint_alpine_ansiblelint"

secretlint_alpine_dockerfilelint:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"
  needs:
    - "hadolint_alpine_dockerfilelint"

secretlint_alpine_jinjalint:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"
  needs:
    - "hadolint_alpine_jinjalint"

secretlint_alpine_secretlint:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"
  needs:
    - "hadolint_alpine_secretlint"

secretlint_alpine_sonarcli:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"
  needs:
    - "hadolint_alpine_sonarcli"

secretlint_alpine_yamllint:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"
  needs:
    - "hadolint_alpine_yamllint"

secretlint_alpine_markdownlint:
  <<: *secretlint
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"
  needs:
    - "hadolint_alpine_markdownlint"

secretlint_alpine_git:
  <<: *secretlint
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"
  needs:
    - "hadolint_alpine_git"

secretlint_alpine_releasecli:
  <<: *secretlint
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"
  needs:
    - "hadolint_alpine_releasecli"

############################################
#### sonarqube
############################################

sonarqube-check:
  stage: sonarqube
  image: 
    name: $NEXUS_REPOS_DOCKER_REGISTRY/$DOCKER_IMAGE_ALPINE_SONAR_SCANNER_CLI
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - ".sonar/cache"
  script: 
    - "sonar-scanner"

############################################
#### testbuild
############################################

testbuild_debian_11_ansible:
  <<: *testbuild
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"

testbuild_debian_12_ansible:
  <<: *testbuild
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"

testbuild_docker_dind_ansible:
  <<: *testbuild
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"

testbuild_docker_dind_molecule:
  <<: *testbuild
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"

testbuild_ubuntu_22_ansible:
  <<: *testbuild
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"

testbuild_debian_11_certification:
  <<: *testbuild
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"

testbuild_debian_npmbuild:
  <<: *testbuild
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"

testbuild_docker_dockerfilebuild:
  <<: *testbuild
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"

testbuild_alpine_ansiblelint:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"

testbuild_alpine_dockerfilelint:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"

testbuild_alpine_jinjalint:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"

testbuild_alpine_secretlint:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"

testbuild_alpine_sonarcli:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"

testbuild_alpine_yamllint:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"

testbuild_alpine_markdownlint:
  <<: *testbuild
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"

testbuild_alpine_git:
  <<: *testbuild
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"

testbuild_alpine_releasecli:
  <<: *testbuild
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"

############################################
#### security
############################################

security_debian_11_ansible:
  <<: *security
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"
#  needs:
#    - "testbuild_debian_11_ansible"

security_debian_12_ansible:
  <<: *security
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"
#  needs:
#    - "testbuild_debian_12_ansible"

security_docker_dind_ansible:
  <<: *security
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"
#  needs:
#    - "testbuild_docker_dind_ansible"

security_docker_dind_molecule:
  <<: *security
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"
#  needs:
#    - "testbuild_docker_dind_molecule"

security_ubuntu_22_ansible:
  <<: *security
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"
#  needs:
#    - "testbuild_ubuntu_22_ansible"

security_debian_11_certification:
  <<: *security
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"
#  needs:
#    - "testbuild_debian_11_certification"

security_debian_npmbuild:
  <<: *security
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"
#  needs:
#    - "testbuild_debian_npmbuild"

security_docker_dockerfilebuild:
  <<: *security
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"
#  needs:
#    - "testbuild_docker_dockerfilebuild"

security_alpine_ansiblelint:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"
#  needs:
#    - "testbuild_alpine_ansiblelint"

security_alpine_dockerfilelint:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"
#  needs:
#    - "testbuild_alpine_dockerfilelint"

security_alpine_jinjalint:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"
#  needs:
#    - "testbuild_alpine_jinjalint"

security_alpine_secretlint:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "alpine-secretlint"
#  needs:
#    - "testbuild_alpine_secretlint"

security_alpine_sonarcli:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"
#  needs:
#    - "testbuild_alpine_sonarcli"

security_alpine_yamllint:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"
#  needs:
#    - "testbuild_alpine_yamllint"

security_alpine_markdownlint:
  <<: *security
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"
#  needs:
#    - "testbuild_alpine_markdownlint"

security_alpine_git:
  <<: *security
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"
#  needs:
#    - "testbuild_alpine_git"

security_alpine_releasecli:
  <<: *security
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"
#  needs:
#    - "testbuild_alpine_releasecli"
