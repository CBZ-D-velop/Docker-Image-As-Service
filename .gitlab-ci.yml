# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
- gitlab-test
- lint
- security
- sonarqube
- testbuild
- publish

###############################################################################
#################### actions
###############################################################################

# To start, we need to lint Dockerfile with hadolint
.hadolint: &hadolint
  stage: lint
  image: $NEXUS_ADDRESS/$DOCKER_IMAGE_DOCKERFILE_LINT
  script:
    - "hadolint --ignore DL3018 --ignore DL3013 --ignore DL3008 --ignore DL3009 --ignore DL3015 $(pwd)/$TYPE/$NAME/latest/Dockerfile"
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_MESSAGE=~/^[^Merge]/ && $CI_COMMIT_BRANCH == "develop"'

###############################################################################
#################### CI JOBS
###############################################################################

############################################
#### gitlab-test
############################################

# As a GitLab ci, we use the default template :)
sast:
  stage: gitlab-test
include:
- template: Security/SAST.gitlab-ci.yml
  allow_failure: false

############################################
#### hadolint
############################################

hadolint_debian_11_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "debian-11-ansible"

hadolint_debian_12_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "debian-12-ansible"

hadolint_docker_dind_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-ansible"

hadolint_docker_dind_molecule:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "docker-dind-molecule"

hadolint_ubuntu_22_ansible:
  <<: *hadolint
  variables:
    TYPE: "Ansible"
    NAME: "ubuntu-22-ansible"

hadolint_debian_11_certification:
  <<: *hadolint
  variables:
    TYPE: "Build"
    NAME: "debian-11-certification"

hadolint_debian_npmbuild:
  <<: *hadolint
  variables:
    TYPE: "Build"
    NAME: "debian-npmbuild"

hadolint_docker_dockerfilebuild:
  <<: *hadolint
  variables:
    TYPE: "Build"
    NAME: "docker-dockerfilebuild"

hadolint_alpine_ansiblelint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-ansiblelint"

hadolint_alpine_dockerfilelint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-dockerfilelint"

hadolint_alpine_jinjalint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-jinjalint"

hadolint_alpine_alpine_sonarcli:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-sonarcli"

hadolint_alpine_yamllint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "alpine-yamllint"

hadolint_alpine_markdownlint:
  <<: *hadolint
  variables:
    TYPE: "Lint"
    NAME: "debian-markdownlint"

hadolint_alpine_git:
  <<: *hadolint
  variables:
    TYPE: "Publish"
    NAME: "alpine-git"

hadolint_alpine_releasecli:
  <<: *hadolint
  variables:
    TYPE: "Publish"
    NAME: "alpine-releasecli"
